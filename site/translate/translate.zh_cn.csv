"site/app/layout/footer.html","关于"
"site/app/layout/footer.html","许可证"
"site/app/pages/license.js","许可证"
"site/app/layout/nav-content.js","首页"
"site/app/layout/nav-content.js","快速上手"
"site/app/layout/nav-content.js","样式主题"
"site/app/layout/nav-content.js","概念"
"site/app/layout/nav-content.js","预置主题"
"site/app/layout/nav-content.js","自定义主题"
"site/app/layout/nav-content.js","UI 元素"
"site/app/layout/nav-content.js","阴影"
"site/app/layout/nav-content.js","布局"
"site/app/layout/nav-content.js","排版"
"site/app/layout/nav-content.js","高级"
"site/app/layout/nav-content.js","路由整合"
"site/app/layout/nav-content.js","国际化"
"site/app/layout/nav-content.js","组件"
"site/app/layout/nav-content.js","头像|Avatar"
"site/app/layout/nav-content.js","小提示|Badge"
"site/app/layout/nav-content.js","底栏|Bottom Bar"
"site/app/layout/nav-content.js","按钮|Button"
"site/app/layout/nav-content.js","卡片|Card"
"site/app/layout/nav-content.js","内容|Content"
"site/app/layout/nav-content.js","日期选择|Datepicker"
"site/app/layout/nav-content.js","对话框|Dialog"
"site/app/layout/nav-content.js","分隔线|Divider"
"site/app/layout/nav-content.js","抽屉|Drawer"
"site/app/layout/nav-content.js","空提示|Empty State"
"site/app/layout/nav-content.js","表单|Forms"
"site/app/layout/nav-content.js","自动补全|Autocomplete"
"site/app/layout/nav-content.js","多选框|Checkbox"
"site/app/layout/nav-content.js","纸片|Chips"
"site/app/layout/nav-content.js","文件选择|File"
"site/app/layout/nav-content.js","文本框|Input & Textarea"
"site/app/layout/nav-content.js","单选项|Radio"
"site/app/layout/nav-content.js","下拉选择|Select"
"site/app/layout/nav-content.js","切换|Switch"
"site/app/layout/nav-content.js","文本高亮|Highlight"
"site/app/layout/nav-content.js","图标|Icon"
"site/app/layout/nav-content.js","列表|List"
"site/app/layout/nav-content.js","菜单|Menu"
"site/app/layout/nav-content.js","进度条|Progress"
"site/app/layout/nav-content.js","消息提示|Snackbar"
"site/app/layout/nav-content.js","正在加载|Spinner"
"site/app/layout/nav-content.js","步骤条|Steppers"
"site/app/layout/nav-content.js","子标题|Subheader"
"site/app/layout/nav-content.js","分页|Pagination"
"site/app/layout/nav-content.js","表格|Table"
"site/app/layout/nav-content.js","标签页|Tabs"
"site/app/layout/nav-content.js","工具栏|Toolbar"
"site/app/layout/nav-content.js","气泡提示|Popover"
"site/app/layout/nav-content.js","悬浮提示|Tooltip"
"site/app/layout/nav-content.js","关于"
"site/app/layout/nav-content.js","许可证"
"site/app/pages/home/index.js","Jinge Material - 构建在 Jinge 框架上的 Material Design 组件库"
"site/app/pages/about.html","构建在 Jinge 框架上的 Material Design 组件库"
"site/app/pages/about.html","作者"
"site/app/pages/about.html","项目介绍"
"site/app/pages/about.html","<p>在长期的业务项目研发中，我探索并开发了一个和主流 mvvm 框架的核心都不同的 <a target=\"_blank\" href=\"https://github.com/YuhangGe/jinge\">Jinge</a> 框架。为了验证这个框架的能力，我决定在这个框架上开发一个 UI 组件库。</p><p>考虑到主要是为了快速验证 Jinge 框架的能力，并在组件库开发的过程中同步地不断完善这个框架，而不想在组件本身的开发上耗费过多精力，我决定直接从 <a target=\"_blank\" href=\"https://vuematerial.io\">Vue Material</a> 这个项目分叉（Fork）。</p><p>但由于 Jinge 框架和 Vue 框架除了在功能和使用方式上都保持了现代 mvvm 框架的一致性外，核心几乎完全不同，因此从 Vue Material 项目分叉后，会需要把整个项目除了 scss 样式之外的代码几乎全部重写。因此我并没有采用在 Github 平台上直接分叉（Fork）该项目的方式，而是另起炉灶新开了 Jinge Material 仓库。所以更准确的说法是，Jinge Materail 项目移植（Port）自 Vue Material 项目。</p><p>Jinge Material 在移植自 Vue Material 项目的过程中，同时也参考 <a href=\"https://ant.design\" target=\"_blank\">Ant Design</a> 等现代组件库，对项目的目录结构和各别组件的设计进行了重构。中文相关的翻译，也大量参考了 Ant Design。</p>"
"site/app/pages/about.html","关于"
"site/app/pages/home/index.html","构建在 Jinge 框架上的 Material Design 组件库"
"site/app/pages/home/index.html","快速上手"
"site/app/pages/home/index.html","浏览组件"
"site/app/pages/home/index.html","特别说明"
"site/app/pages/home/index.html","此项目的主要目的是通过实现一套组件库来不断完善 Jinge 框架本身，代码主要移植自 <a target=\"_blank\" href=\"https://vuematerial.io\">Vue Material</a>，特别是 scss 样式代码绝大部分拷贝自该项目。"
"site/app/pages/home/index.html","精准实现 Google Material Design 设计规范。"
"site/app/pages/home/index.html","适配所有主流的现代浏览器，支持移动设备的响应式。"
"site/app/pages/home/index.html","支持多皮肤主题，国际化多语言等丰富全面的功能。"
"site/app/pages/components/subheader/index.html","子标题（Subheader）"
"site/app/pages/components/divider/index.html","分隔线 Divider"
"site/app/pages/components/file/index.html","文件选择 File"
"site/app/pages/components/highlight/index.html","文本高亮 Highlight"
"site/app/pages/components/checkbox/index.html","多选框"
"site/app/pages/components/checkbox/index.html","多选框有两种使用模式，单一模式（Single)和数组（Array）模式。"
"site/app/pages/components/checkbox/index.html","单一模式下多选框的 value 是一个单一的值，该多选框被点击切换时，其 value 会在 trueValue 和 falseValue 这两个单一值之间切换，并通过 change 事件向外传递切换后的值。"
"site/app/pages/components/checkbox/index.html","单一模式多选框"
"site/app/pages/components/checkbox/index.html","数组模式下多选框的 value 是数组，需要指定 trueValue 但不需要指定 falseValue。该多选框被点击时，会向 value 指定的数组里添加或删除 trueValue 指定的元素。需要注意这种模式下，value 指定的数组，会被直接修改，并通过 change 事件向外传递修改后的数组。"
"site/app/pages/components/checkbox/index.html","数组模式多选框"
"site/app/pages/components/checkbox/index.html","The following options can be applied to all checkboxes:"
"site/app/pages/components/checkbox/index.html","多选框 Checkbox"
"site/app/pages/components/snackbar/index.html","消息提示 Snackbar"
"site/app/pages/components/switch/examples/array-switch.html","描述"
"site/app/pages/components/switch/examples/array-switch.html","示例"
"site/app/pages/components/switch/examples/array-switch.html","值"
"site/app/pages/components/switch/examples/array-switch.html","简单字符串数组"
"site/app/pages/components/switch/examples/array-switch.html","城市开关："
"site/app/pages/components/switch/examples/array-switch.html","Object 数组"
"site/app/pages/components/switch/examples/array-switch.html","用户开关："
"site/app/pages/components/pagination/index.html","基础分页"
"site/app/pages/components/pagination/index.html","完整分页"
"site/app/pages/components/pagination/index.html","禁用分页"
"site/app/pages/components/pagination/index.html","分页 Pagination"
"site/app/pages/components/dialog/index.html","自定义内容"
"site/app/pages/components/dialog/index.html","对话框 Dialog"
"site/app/pages/components/checkbox/examples/array-checkbox.html","描述"
"site/app/pages/components/checkbox/examples/array-checkbox.html","示例"
"site/app/pages/components/checkbox/examples/array-checkbox.html","值"
"site/app/pages/components/checkbox/examples/array-checkbox.html","简单字符串数组"
"site/app/pages/components/checkbox/examples/array-checkbox.html","请选择城市："
"site/app/pages/components/checkbox/examples/array-checkbox.html","Object 数组"
"site/app/pages/components/checkbox/examples/array-checkbox.html","请选择用户："
"site/app/pages/components/checkbox/examples/single-checkbox.html","描述"
"site/app/pages/components/checkbox/examples/single-checkbox.html","示例"
"site/app/pages/components/checkbox/examples/single-checkbox.html","值"
"site/app/pages/components/checkbox/examples/single-checkbox.html","无任何属性的最简单选择框"
"site/app/pages/components/checkbox/examples/single-checkbox.html","标签"
"site/app/pages/components/checkbox/examples/single-checkbox.html","(无)"
"site/app/pages/components/checkbox/examples/single-checkbox.html","传递简单的布尔值"
"site/app/pages/components/checkbox/examples/single-checkbox.html","传递简单的字符串值"
"site/app/pages/components/checkbox/examples/single-checkbox.html","我已阅读并同意协议"
"site/app/pages/components/checkbox/examples/single-checkbox.html","传递 Object 值"
"site/app/pages/components/datepicker/index.html","日期选择 Datepicker"
"site/app/pages/components/toolbar/index.html","工具栏 Toolbar"
"site/app/pages/components/snackbar/examples/static.html","Show snackbar directly by calling static method <code>Snackbar.show</code>"
"site/app/pages/components/autocomplete/index.html","自动补全 Autocomplete"
"site/app/components/code-example.html","显示示例"
"site/app/components/code-example.html","显示 javascript 代码"
"site/app/components/code-example.html","显示 html 代码"
"site/app/components/code-example.html","显示 scss 代码"
"site/app/pages/ui-elements/layout/index.html","布局"
"site/app/pages/components/card/index.html","Card"
"site/app/pages/components/chips/index.html","纸片 Chips"
"site/app/pages/components/input/index.html","文本框 Input & Textarea"
"site/app/components/code-block.html","代码已复制！"
"site/app/components/code-block.html","复制"
"site/app/pages/components/list/index.html","列表 List"
"site/app/pages/components/button/api.js","属性名称"
"site/app/pages/components/button/api.js","描述"
"site/app/pages/components/button/api.js","默认值"
"site/app/pages/components/button/api.js","直接传递到原生 &lt;button&gt; 元素的 type 属性"
"site/app/pages/components/button/api.js","禁用按钮。"
"site/app/pages/components/button/api.js","是否启用 ripple 效果。"
"site/app/pages/components/button/api.js","事件名称"
"site/app/pages/components/button/api.js","参数"
"site/app/pages/components/button/api.js","鼠标点击事件。"
"site/app/pages/components/button/api.js","任意可作用到原生 &lt;button&gt; 元素的事件，组件会将事件绑定传递到原生 &lt;button&gt; 元素。"
"site/app/pages/components/button/api.js","名称"
"site/app/pages/components/button/api.js","主题 Primary 颜色按钮。"
"site/app/pages/components/button/api.js","主题 Accent 颜色按钮。"
"site/app/pages/components/button/index.html","按钮组件用于响应用户的点（触）击操作。按钮类型包括 <strong>Flat</strong>, <strong>Raised</strong> 和 <strong>Floating</strong>。Flat 和 Raised 类型的按钮默认情况下只展示文本，但也可以通过特殊的 class 来附加图标(Icon)。Floating 类型的按钮只展示图标(Icon)。按钮可以通过添加 <strong>Dense</strong> 这个 class 来调整为较小的大小。"
"site/app/pages/components/button/index.html","Flat 和 Raised 类型"
"site/app/pages/components/button/index.html","不添加任何 class 的情况下，按钮的默认类型即 Flat。添加 <code>md-raised</code> 这个 class 即可指定按钮类型为 Raised。"
"site/app/pages/components/button/index.html","常规按钮"
"site/app/pages/components/button/index.html","包括 FAB 类型的所有按钮都有以下接口："
"site/app/pages/components/button/index.html","图标（Icons）类型"
"site/app/pages/components/button/index.html","To display icons inside buttons you only need to add a class and you're good to go. And you can also combine it with the raised class."
"site/app/pages/components/button/index.html","图标按钮"
"site/app/pages/components/button/index.html","FAB"
"site/app/pages/components/button/index.html","Links and Buttons"
"site/app/pages/components/button/index.html","UI Router Buttons"
"site/app/pages/components/button/index.html","按钮（Button）"
"site/app/pages/components/table/index.html","表格 Table"
"site/app/pages/components/select/index.html","下拉选择 Select"
"site/app/pages/components/tabs/index.html","标签页 Tabs"
"site/app/pages/components/steppers/index.html","步骤条 Steppers"
"site/app/pages/components/menu/index.html","菜单 Menu"
"site/app/pages/components/progress/index.html","进度条"
"site/app/pages/components/progress/index.html","Determinate"
"site/app/pages/components/progress/index.html","Indeterminate"
"site/app/pages/components/progress/index.html","进度条 Progress Bar"
"site/app/pages/components/empty/index.html","空提示 Empty State"
"site/app/pages/components/avatar/index.html","头像 Avatar"
"site/app/pages/components/badge/index.html","徽标提示 Badge"
"site/app/pages/components/bottom-bar/index.html","底栏（Bottom Bar）"
"site/app/pages/components/drawer/index.html","抽屉 Drawer"
"site/app/pages/components/spinner/index.html","该组件常用于指示正在加载、正在提交等状态，也可用于具体指示加载的进度。为了简化 API，通过是否指定 <code>value</code> 属性来决定 Spinner 属于哪个类型。"
"site/app/pages/components/spinner/index.html","指定 <code>value</code> 属性时，属于指示具体加载进度的 Spinner，<code>value</code> 属性为 0-100 的数字。"
"site/app/pages/components/spinner/index.html","不指定 <code>value</code> 属性时，属于指示正在加载状态的 Spinner,Spinner 表现为一个旋转的加载动画。"
"site/app/pages/components/spinner/index.html","指示正在加载状态的 Spinner"
"site/app/pages/components/spinner/index.html","指示具体的加载进度的 Spinner"
"site/app/pages/components/spinner/index.html","在按钮中使用 Spinner"
"site/app/pages/components/spinner/index.html","默认情况下，Spinner 的大小为 <code>1em</code>（即字号大小），颜色为 <code>currentColor</code>（即文字颜色）。在实际使用时，可以通过调整父元素的字号和颜色来改变 Spinner 的大小和颜色，也可以通过以下接口来调整："
"site/app/pages/components/spinner/index.html","加载指示 Spinner"
"site/app/pages/components/icon/index.html","Material 图标"
"site/app/pages/components/icon/index.html","Icon Font 图标"
"site/app/pages/components/icon/index.html","Font Icon 图标"
"site/app/pages/components/icon/index.html","SVG 图标"
"site/app/pages/components/icon/index.html","图标 Icon"
"site/app/pages/components/switch/index.html","切换按钮"
"site/app/pages/components/switch/index.html","切换按钮可以理解成多选框的另一种展示方式，其核心逻辑和多选框完全一样。因此，切换按钮也分为单一模式和数组模式，且 API 接口和多选框完全一样。"
"site/app/pages/components/switch/index.html","单一模式的切换按钮，这种模式是最常见的使用模式。"
"site/app/pages/components/switch/index.html","单一模式切换按钮"
"site/app/pages/components/switch/index.html","数组模式的切换按钮，这种模式很少使用。典型的使用场景就是配置由个开关组成的开关分组。"
"site/app/pages/components/switch/index.html","数组模式切换按钮"
"site/app/pages/components/switch/index.html","和<code>&lt;md-checkbox&gt;</code>完全一样，请参看<code>&lt;md-checkbox&gt;</code>的 API 文档"
"site/app/pages/components/switch/index.html","切换按钮 Switch"
"site/app/pages/ui-elements/typography/index.html","排版 Typography"
"site/app/pages/ui-elements/elevation/index.html","阴影"
"site/app/pages/components/popconfirm/examples/simple.js","未命名"
"site/app/pages/components/popconfirm/api.js","文字提示的内容"
"site/app/pages/components/popconfirm/api.js","点击确认按钮后是否隐藏气泡。"
"site/app/pages/components/popconfirm/api.js","是否进入正在确认的加载状态"
"site/app/pages/components/popconfirm/api.js","同 Popover 组件"
"site/app/pages/components/popconfirm/api.js","用户点击确认按钮"
"site/app/pages/components/popconfirm/api.js","用户点击取消按钮"
"site/app/pages/components/popconfirm/index.html","气泡确认框"
"site/app/pages/components/popconfirm/index.html","Popover 组件的所有 API 也可用于 Popconfirm 组件。但部分属性的默认值不同。"
"site/app/pages/components/popconfirm/index.html","气泡确认框 Popconfirm"
"site/app/pages/components/switch/examples/single-switch.html","描述"
"site/app/pages/components/switch/examples/single-switch.html","示例"
"site/app/pages/components/switch/examples/single-switch.html","值"
"site/app/pages/components/switch/examples/single-switch.html","无任何属性的最简单切换按钮"
"site/app/pages/components/switch/examples/single-switch.html","标签"
"site/app/pages/components/switch/examples/single-switch.html","(无)"
"site/app/pages/components/switch/examples/single-switch.html","传递简单的布尔值"
"site/app/pages/components/switch/examples/single-switch.html","传递简单的字符串值"
"site/app/pages/components/switch/examples/single-switch.html","自动更新"
"site/app/pages/components/switch/examples/single-switch.html","传递 Object 值"
"site/app/pages/components/tooltip/api.js","文字提示的内容"
"site/app/pages/components/tooltip/api.js","参看 Popover 组件"
"site/app/pages/components/tooltip/index.html","文字提示"
"site/app/pages/components/tooltip/index.html","Popover 组件的所有 API 也可用于 Tooltip 组件。但部分属性的默认值不同。"
"site/app/pages/components/tooltip/index.html","文字提示 Tooltip"
"site/app/pages/components/popover/api.js","控制气泡卡片是否展示。外部父组件可通过此属性手动控制。"
"site/app/pages/components/popover/api.js","气泡卡片的触发方式，包括 click, hover 和 none。如果指定为 none，代表气泡卡片不自动绑定触发元素，完全靠 active 属性控制。"
"site/app/pages/components/popover/api.js","卡片在延迟一定的时间后显示，单位为毫秒。"
"site/app/pages/components/popover/api.js","卡片显示时的相对位置，参看 Popper.js 的 placement 概念。"
"site/app/pages/components/popover/api.js","卡片显示时的偏移量，参看 Popper.js 的 offset 概念。"
"site/app/pages/components/popover/api.js","附加在卡片的 DOM 上的 html class。"
"site/app/pages/components/popover/api.js","卡片显示和隐藏时的 css 动画。"
"site/app/pages/components/popover/api.js","点击卡片之外的其它区域时，是否隐藏卡片。"
"site/app/pages/components/popover/api.js","Popper.js 的更多自定义高级配置。"
"site/app/pages/components/popover/api.js","用于控制气泡里面顶部的标题样式。"
"site/app/pages/components/popover/api.js","控制气泡里面中间的内容样式。"
"site/app/pages/components/popover/api.js","控制气泡里面底部的按钮区域样式。"
"site/app/pages/components/popover/api.js","气泡显示或隐藏时的事件"
"site/app/pages/components/popover/index.html","气泡卡片"
"site/app/pages/components/popover/index.html","气泡卡片 Popover"
"site/app/pages/components/popconfirm/examples/simple.html","简单的 Popconfirm："
"site/app/pages/components/popconfirm/examples/simple.html","删除"
"site/app/pages/components/popconfirm/examples/simple.html","您确认要删除 ${some.name} 吗？"
"site/app/pages/components/popconfirm/examples/simple.html","配合服务器端 API 接口："
"site/app/pages/components/tooltip/examples/simple.html","简单的 Tooltip："
"site/app/pages/components/tooltip/examples/simple.html","你好，世界！"
"site/app/pages/components/tooltip/examples/simple.html","改变 placement 和 delay："
"site/app/pages/components/tooltip/examples/simple.html","通过父组件里的参数控制显示和隐藏："
"site/app/pages/components/tooltip/examples/simple.html","展示自定义的内容："
"site/app/pages/components/content/index.html","内容框"
"site/app/pages/components/content/index.html","内容框示例"
"site/app/pages/components/content/index.html","The following option can be applied to md-content component:"
"site/app/pages/components/content/index.html","内容框 Content"
"site/app/pages/components/radio/index.html","单选项"
"site/app/pages/components/radio/index.html","简单单选项"
"site/app/pages/components/radio/index.html","The following options can be applied to all checkboxes:"
"site/app/pages/components/radio/index.html","单选项 Radio"
"site/app/pages/components/popover/examples/simple.html","简单地使用内置 Trigger 触发气泡卡片展示和隐藏："
"site/app/pages/components/popover/examples/simple.html","通过父组件里的参数控制气泡的显示和隐藏："
"site/app/pages/components/radio/examples/simple-radios.html","描述"
"site/app/pages/components/radio/examples/simple-radios.html","示例"
"site/app/pages/components/radio/examples/simple-radios.html","值"
"site/app/pages/components/radio/examples/simple-radios.html","简单选择项"
"site/app/pages/components/radio/examples/simple-radios.html","字符串数组"
"site/app/pages/components/radio/examples/simple-radios.html","Object 数组"