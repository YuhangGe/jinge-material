@import 'style/engine/index';
@import 'style/themes/default';
@import '../animation/variables.scss';
@import '../elevation/mixins.scss';

$md-switch-width: 34px;
$md-switch-height: 14px;
$md-switch-size: 20px;
$md-switch-touch-size: 48px;

.md-switch {
  width: auto;
  margin: 16px 16px 16px 0;
  display: inline-flex;
  position: relative;

  &:not(.md-disabled) {
    cursor: pointer;

    .md-switch-label {
      cursor: pointer;
    }
  }

  .md-switch-container {
    width: $md-switch-width;
    min-width: $md-switch-width;
    height: $md-switch-height;
    margin: 3px 0;
    display: flex;
    align-items: center;
    position: relative;
    border-radius: $md-switch-height;
    transition: $md-transition-stand;
    background-color: rgba(#000, 0.38);
  }

  .md-switch-thumb {
    @include md-elevation(1);
    @include md-theme-property-by-hue(background-color, grey, 100, switch, thumb);

    width: $md-switch-size;
    height: $md-switch-size;
    position: relative;
    border-radius: 50%;
    transition: $md-transition-stand;

    &::before {
      width: $md-switch-touch-size;
      height: $md-switch-touch-size;
      position: absolute;
      top: 50%;
      left: 50%;
      z-index: 11;
      transform: translate(-50%, -50%);
      content: ' ';
    }

    .md-ripple {
      width: $md-switch-touch-size !important;
      height: $md-switch-touch-size !important;
      top: 50% !important;
      left: 50% !important;
      position: absolute;
      transform: translate(-50%, -50%);
      border-radius: 50%;
    }

    input {
      position: absolute;
      left: -999em;
    }
  }

  .md-switch-label {
    height: $md-switch-size;
    padding-left: 16px;
    position: relative;
    line-height: $md-switch-size;
  }
}

.md-switch.md-checked {
  .md-switch-container {
    @include md-theme-property(background-color, accent, null, 0.38);
  }

  .md-switch-thumb {
    transform: translate3d(15px, 0, 0);

    @include md-theme-property(background-color, accent);
  }

  .md-ripple {
    @include md-theme-property(color, accent);
  }

  &.md-primary {
    .md-switch-container {
      @include md-theme-property(background-color, primary, null, 0.38);
    }

    .md-switch-thumb {
      @include md-theme-property(background-color, primary);
    }

    .md-ripple {
      @include md-theme-property(color, primary);
    }
  }
}

.md-switch.md-required {
  label::after {
    position: absolute;
    top: 2px;
    right: 0;
    transform: translateX(calc(100% + 2px));
    content: '*';
    line-height: 1em;
    vertical-align: top;
  }
}

.md-switch.md-disabled {
  .md-switch-container {
    background-color: rgba(#000, 0.12);
  }

  .md-switch-thumb {
    @include md-theme-property-by-hue(background-color, grey, 400, switch, thumb);
  }
}

/*
@if md-get-theme-mode() == light {
  .md-switch-container {
    background-color: rgba(#000, .38);
  }

  .md-switch-thumb {
    @include md-theme-property-by-hue(background-color, grey, 100, switch, thumb);
  }

  &.md-disabled {
    .md-switch-container {
      background-color: rgba(#000, .12);
    }

    .md-switch-thumb {
      @include md-theme-property-by-hue(background-color, grey, 400, switch, thumb);
    }
  }
} @else {
  .md-switch-container {
    background-color: rgba(#fff, .3);
  }

  .md-switch-thumb {
    @include md-theme-property-by-hue(background-color, grey, 400, switch, thumb);
  }

  &.md-disabled {
    .md-switch-container {
      background-color: rgba(#fff, .1);
    }

    .md-switch-thumb {
      @include md-theme-property-by-hue(background-color, grey, 800, switch, thumb);
    }
  }
}
*/
